// Настройка сборки зависимостей модуля. Здесь все, чего нет в зависимостях проекта
// https://habr.com/ru/post/568792/
plugins {
    // Два первых стандрт обязательны для Котлина
    id 'com.android.application'
    id 'kotlin-android'
    // можно использовать такие библиотеки, как Hilt или Data Binding
    id 'kotlin-kapt'
    // Необходимо для класса передачи параметров в навигации проекта
    id "androidx.navigation.safeargs.kotlin"
    //id 'kotlin-android-extensions' - Устарела теперь только 'kotlin-parcelize'
    // Нужно для внедрения зависимостей Hilt
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    //compileSdkVersion 'android-S'
    //buildToolsVersion '31.0.0 rc5'
   // compileSdkVersion '31-ext2' // классы и модули будут браться из Android 11
   // buildToolsVersion "32.0.0-rc1" // Ревижн Android 11
    // классы и модули будут браться из Android 11
    buildToolsVersion '33.0.0' // Ревижн Android 11
   // compileSdkVersion 33 // классы и модули будут браться из Android 11
   // buildToolsVersion '33.0.0 rc3' // Ревижн Android 11
    //https://developer.android.com/studio/build/configure-app-module#set-namespace
    namespace "com.app4web.asdzendo.todo"
    // Включить Спецтехнологии:
    buildFeatures {
        // построит из xml спецклассы java см. java (generated)
        dataBinding  true
        viewBinding true  // будем использовать для других
    }
    dataBinding {
        // может и не нужен??
        enabledForTests = true
    }

    defaultConfig {
        // !! Имя пакета !! оно в смарт уезжает и в Google play, Firebase, AdMob
        applicationId "com.app4web.asdzendo.todo"
        minSdkVersion 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        // ???
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // ???
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Обязательно 1_8 для этой архитектуры
        sourceCompatibility (JavaVersion.VERSION_11)
        targetCompatibility (JavaVersion.VERSION_11)
    }
    kotlinOptions {
        // Обязательно для использования Room и др.
        jvmTarget = '11'
        // ??? Переписал откуда-то зачем не помню
        // freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
        // Enable Coroutines and Flow APIs из sunflowers
        // freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        // freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }
    // Always show the result of every unit test when running via command line, even if it passes.
    // Всегда показывайте результат каждого модульного теста при запуске через командную строку, даже если он проходит.
    // избавиться от ошибки  No such manifest file: ./AndroidManifest.xml - НЕ работает дает ошибку ROBO
   /* testOptions.unitTests {
        includeAndroidResources = true
        // Robolectric
        // RuntimeException c причиной — method not mocked при попытке запустить тест кода вызывающего какой — либо метод фреймворка.
        // А если использовать следующую опцию в Gradle -
        returnDefaultValues = true
        // то, RuntimeException брошен не будет. Такое поведение может приводить к тяжело детектируемым ошибкам в тестах.
    }*/
}
// Перечисление зависимостей от библиотек java/kotlin/androidx/google/...
// Они все берутся из repositories проекта: сейчас - google() и jcenter()
dependencies {
    // Стандарт для Android Kotlin; Если есть -ktx, ставить ее (там плюс идиомы)
    implementation 'androidx.core:core-ktx:1.9.0' //1.3.1'  // 1.5.0-alpha01 // идиомы
    implementation 'androidx.appcompat:appcompat:1.5.1'  // 1.3.0-alpha02 наследник активити 1.4.1
    //implementation 'androidx.fragment:fragment-ktx:1.4.1'  // 1.3.0-alpha07 1.4.1
    implementation 'com.google.android.material:material:1.7.0'  // 1.3.0-alpha02'  // 1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.legacy:legacy-support-v4:1.0.0" //  обратное API от 14 android 4 - ScrollChildSwipeRefreshLayout
    implementation 'androidx.recyclerview:recyclerview:1.2.1' // 1.1.0

    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'  // 2.5.0-beta01
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3' // 2.5.0-beta01

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'  // liveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1' // ViewModelScope,
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    // Room dependencies
    implementation 'androidx.room:room-runtime:2.4.3'  // 2.3.0-alpha02
    implementation 'androidx.room:room-ktx:2.4.3'
    implementation 'androidx.room:room-paging:2.4.3'
    // 2.3.0-alpha02 // optional - Kotlin Extensions and Coroutines support for Room
    kapt 'androidx.room:room-compiler:2.4.3'  // 2.3.0-alpha02

    // Coroutines for getting off the UI thread
    // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"  //??
    kapt "androidx.hilt:hilt-compiler:1.0.0"   // ??

    // Logging
    implementation "com.jakewharton.timber:timber:5.0.1"

    // Тестовые библиотеки стандарт шаблона + room
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    //implementation 'androidx.test.espresso:espresso-idling-resource:3.3.0'
    //testImplementation 'androidx.room:room-testing:2.4.0-alpha02'
    //testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0"

    // AndroidX Test - JVM testing
    /*
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"
    testImplementation "androidx.test:core-ktx:1.4.0-beta01"
    testImplementation 'org.robolectric:robolectric:4.5.1'  //'4.4'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
     */
}
/*kapt {
    correctErrorTypes true
}

 */


/*
 Testing dependencies sunflower
 androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
 androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
 androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
 androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"
 androidTestImplementation "androidx.test.ext:junit:$rootProject.testExtJunit"
 androidTestImplementation "androidx.test.uiautomator:uiautomator:$rootProject.uiAutomatorVersion"
 androidTestImplementation "androidx.work:work-testing:$rootProject.workVersion"
 androidTestImplementation "com.google.truth:truth:$rootProject.truthVersion"
 testImplementation "junit:junit:$rootProject.junitVersion"

 */