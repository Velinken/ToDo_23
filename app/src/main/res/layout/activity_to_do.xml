<?xml version="1.0" encoding="utf-8"?>
<!-- Разметка Main Activity -->
<!--Это обертка, которая говорит, что это DataBinding -->

    <!--DrawerLayout обертка от бургера, со стрелкой назад -->
    <androidx.drawerlayout.widget.DrawerLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
        android:id="@+id/drawer_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:openDrawer="start">

        <!--CoordinatorLayout координирующий расположение на экране дочерних элементов спецобразом см. материал дизайн -->
        <androidx.coordinatorlayout.widget.CoordinatorLayout
            android:id="@+id/coordinator_layout"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            tools:context=".ToDoActivity">

            <!--AppBarLayout обертка материал дизайна для бара с оперделенными свойствами -->
            <com.google.android.material.appbar.AppBarLayout
                android:id="@+id/app_bar_layout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:theme="@style/Theme.ToDo.AppBarOverlay">
                <!--CollapsingToolbarLayout скрывает при свайпе вниз-вверх верхнюю и нижнюю панель-->
                <!--он плотно связан с appbar_scrolling_view_behavior - что скрывать и как-->
                <com.google.android.material.appbar.CollapsingToolbarLayout
                    android:id="@+id/toolbar_layout"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:fitsSystemWindows="true"
                    app:collapsedTitleGravity="center"
                    app:collapsedTitleTextAppearance="@style/TextAppearance.ToDo.Toolbar.Text"
                    app:contentScrim="?attr/colorSurface"
                    app:layout_scrollFlags="scroll|snap"
                    app:statusBarScrim="?attr/colorSurface"
                    app:titleEnabled="false"
                    app:toolbarId="@id/toolbar">
                    <!--MaterialToolbar сам тулбар стандартный плюс материал -->
                    <com.google.android.material.appbar.MaterialToolbar
                        android:id="@+id/toolbar"
                        style="@style/Widget.MaterialComponents.Toolbar.Primary"
                        android:layout_width="match_parent"
                        android:layout_height="?attr/actionBarSize"
                        android:background="?attr/colorPrimary"
                        app:layout_collapseMode="parallax"
                        app:popupTheme="@style/Theme.ToDo.PopupOverlay" />
                    <!--Идея всего этого построения: все что выше это навески и обертывания и конфигурирование этого тулбара -->
                </com.google.android.material.appbar.CollapsingToolbarLayout>

            </com.google.android.material.appbar.AppBarLayout>

            <!--/**
     * onCreate надувает setContentView (вот этот макет: R.layout.activity_to_do.xml)
     * По дороге он встречает View <fragment и он должен его надуть, а там есть менеджер фрагментов
     * android:name="androidx.navigation.fragment.NavHostFragment"
     * т.е. он должен надуть сюда что-то этим NavHostFragment, что он и делает вызывая его для надувания
     * и отдает ему mobile_navigation.xml специальным образом подготовленный файл навигации из которого
     * понятно, что надувать.
     *
     * NavHostFragment считывает mobile_navigation и запоминает навсегда.
     * (Мы потом много раз к нему будем обращаться, перейти куда-нибудь)
     * А сейчас он находит строчку app:startDestination="@id/todoFragment", т.е. ему сказано, что стартовым надувать
     * фрагмент с этим имемнем в этом файле.
     * Находит фрагмент с этим именем todoFragment и дает ему команду надуваться сюда:
     * - находит файл kt этого фрагмента com.app4web.asdzendo.todo.ui.todo.ToDoFragment
     * - стартует этот файл ToDoFragment.kt
     * - передает управление этому файлу, а я пошел и больше не нужен, но буду за спиной
     * А мы переходим к ToDoFragment.kt и начинаем с ним рисовать картину в уже подготовленной раме
     */ -->
            <androidx.fragment.app.FragmentContainerView
                android:id="@+id/nav_host_fragment"
                android:name="androidx.navigation.fragment.NavHostFragment"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:defaultNavHost="true"
                app:layout_behavior="@string/appbar_scrolling_view_behavior"
                app:navGraph="@navigation/mobile_navigation" />

        </androidx.coordinatorlayout.widget.CoordinatorLayout>
        <!--NavigationView шторка от бургера -->
        <!--здесь указана менюшка и заголовок, который надувать -->
        <com.google.android.material.navigation.NavigationView
            android:id="@+id/nav_view"
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:layout_gravity="start"
            app:headerLayout="@layout/nav_header_to_do"
            app:menu="@menu/activity_main_drawer" />

    </androidx.drawerlayout.widget.DrawerLayout>

